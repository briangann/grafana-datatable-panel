name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install --immutable

      - name: Check types
        run: yarn typecheck
      - name: Lint
        run: NODE_OPTIONS=--max_old_space_size=4096 yarn lint
      - name: Unit tests
        run: yarn test:ci
      - name: Build frontend
        run: yarn build

      - name: Check for backend
        id: check-for-backend
        run: |
          if [ -f "Magefile.go" ]
          then
            echo "has-backend=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Go environment
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Test backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: coverage

      - name: Build backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: buildAll

      - name: Check for E2E
        id: check-for-e2e
        run: |
          if [ -d "cypress" ]
          then
            echo "has-e2e=true" >> $GITHUB_OUTPUT
          fi

      - name: Start grafana docker
        if: steps.check-for-e2e.outputs.has-e2e == 'true'
        run: docker-compose up -d

      - name: Run e2e tests
        id: run-e2e-tests
        if: steps.check-for-e2e.outputs.has-e2e == 'true'
        run: yarn e2e

      - name: Stop grafana docker
        if: steps.check-for-e2e.outputs.has-e2e == 'true'
        run: docker-compose down

      - name: Archive E2E output
        uses: actions/upload-artifact@v3
        if: steps.check-for-e2e.outputs.has-e2e == 'true' && steps.run-e2e-tests.outcome != 'success'
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 5

      - name: Code Climate - Check environment
        id: check-for-codeclimate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          if [ ! -z $CC_TEST_REPORTER_ID ]
          then
            echo "has-codeclimate=true" >> $GITHUB_OUTPUT
          fi

      - name: Code Climate - Run
        if: steps.check-for-codeclimate.outputs.has-codeclimate == 'true'
        run: |
          mkdir -p ccbin/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./ccbin/cc-test-reporter
          chmod +x ./ccbin/cc-test-reporter
          npm install -g jest jest-junit
          ./ccbin/cc-test-reporter format-coverage -t lcov -o out/codeclimate.frontend.json coverage/lcov.info
          npx jest --ci --runInBand --reporters=default --reporters=jest-junit

      - name: Code Climate - Upload
        if: steps.check-for-codeclimate.outputs.has-codeclimate == 'true'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          ./ccbin/cc-test-reporter sum-coverage out/codeclimate.*.json -d -p 1 -o out/codeclimate.total.json
          ./ccbin/cc-test-reporter upload-coverage -i out/codeclimate.total.json
